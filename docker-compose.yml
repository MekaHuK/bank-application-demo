services:
  rate-service:
    build:
      context: ./rate-service
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
    depends_on:
      - redis
    networks:
      - network

  cache-service:
    build:
      context: ./cache-service
      dockerfile: Dockerfile
    ports:
      - "8082:8082"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
    depends_on:
      - redis
    networks:
      - network

  personal-service:
    build:
      context: ./personal-service
      dockerfile: Dockerfile
    ports:
      - "8083:8083"
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - SPRING_PROFILES_ACTIVE=prod
    depends_on:
      - postgres
      - kafka
    networks:
      - network

  notification-service:
    build:
      context: ./notification-service
      dockerfile: Dockerfile
    ports:
      - "8084:8084"
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - SPRING_PROFILES_ACTIVE=prod
    depends_on:
      - kafka
      - mongo
    networks:
      - network

  postgres:
    image: postgres
    container_name: postgres
    environment:
      POSTGRES_DB: personal-data-db
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: very-difficult-password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - network

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - postgres
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - network

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    networks:
      - network

  redis-commander:
    image: rediscommander/redis-commander:latest
    ports:
      - "8089:8089"
    environment:
      - REDIS_HOSTS=local:redis
      - PORT=8089
    networks:
      - network

  zookeeper:
    image: bitnami/zookeeper:3.8
    container_name: zookeeper
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181
      - ALLOW_ANONYMOUS_LOGIN=yes
    ports:
      - "2181:2181"
    networks:
      - network

  kafka:
    image: bitnami/kafka:3.5
    container_name: kafka
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - ALLOW_PLAINTEXT_LISTENER=yes
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    networks:
      - network

  mongo:
    image: mongo
    container_name: mongo
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=example
    networks:
      - network
    volumes:
      - mongo_data:/data/db

  mongo-express:
    image: mongo-express
    ports:
      - "8088:8081"
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=root
      - ME_CONFIG_MONGODB_ADMINPASSWORD=example
      - ME_CONFIG_MONGODB_URL=mongodb://root:example@mongo:27017/
      - ME_CONFIG_BASICAUTH=false
    depends_on:
      - mongo
    networks:
      - network

networks:
  network:
    driver: bridge

volumes:
  postgres_data:
  pgadmin_data:
  mongo_data:
